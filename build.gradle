plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.6'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.onandhome'
version = '0.0.1-SNAPSHOT'
description = 'OnAndHome project for Spring Boot'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
	sourceCompatibility = '21'
	targetCompatibility = '21'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
// Spring Boot Web
implementation 'org.springframework.boot:spring-boot-starter-web'
implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
implementation 'org.springframework.boot:spring-boot-starter-security'

// Database
runtimeOnly 'com.mysql:mysql-connector-j'

// Lombok
compileOnly 'org.projectlombok:lombok'
annotationProcessor 'org.projectlombok:lombok'

// Development Tools
developmentOnly 'org.springframework.boot:spring-boot-devtools'

// Test
testImplementation 'org.springframework.boot:spring-boot-starter-test'
testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	}

tasks.named('test') {
	useJUnitPlatform()
}

// Ïª¥ÌååÏùº ÏòµÏÖò
tasks.withType(JavaCompile).configureEach {
	options.encoding = 'UTF-8'
	options.compilerArgs << '-parameters'
}

// ÎπåÎìú Î°úÍπÖ
gradle.taskGraph.whenReady { graph ->
	if (graph.hasTask(build)) {
		println "üî® OnAndHome ÎπåÎìú ÏãúÏûë (Java 17)"
	}
}
